import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.function.Consumer;
import javax.swing.JButton;
import javax.swing.JOptionPane;

public class FrmSpiel extends javax.swing.JFrame {

	int numZeilen = 10;
	int numSpalten = 10;
	int numMinen = 10;

	JButton[][] boardControls;

	Board Board;

	/**
	 * Creates new form FrmJuego
	 */
	public FrmSpiel() {
		initComponents();
		newGame();
	}

	void controlsDownloaden() {
		if (boardControls != null) {
			for (int i = 0; i < boardControls.length; i++) {
				for (int j = 0; j < boardControls[i].length; j++) {
					if (boardControls[i][j] != null) {
						getContentPane().remove(boardControls[i][j]);
					}
				}
			}
		}
	}

	private void newGame() {
		controlsDownloaden();
		cargarControles();
		boardGenerieren();
		repaint();
	}

	private void boardGenerieren() {
		Board = new Board(numZeilen, numSpalten, numMinen);
		Board.setGameLost(new Consumer<List<Feld>>() {
			@Override
			public void accept(List<Feld> t) {
				for (Feld casillaConMina : t) {
					boardControls[casillaConMina.getposZeile()][casillaConMina.getposSpalte()].setText("*");
				}
			}
		});
		Board.setGameWon(new Consumer<List<Feld>>() {
			@Override
			public void accept(List<Feld> t) {
				for (Feld casillaConMina : t) {
					boardControls[casillaConMina.getposZeile()][casillaConMina.getposSpalte()].setText(":)");
				}
			}
		});

		Board.setFeldOpen(new Consumer<Feld>() {
			@Override
			public void accept(Feld t) {
				boardControls[t.getposZeile()][t.getposSpalte()].setEnabled(false);
				boardControls[t.getposZeile()][t.getposSpalte()]
						.setText(t.getNumMinenAround() == 0 ? "" : t.getNumMinenAround() + "");
			}
		});
		Board.imprimirTablero();
	}

	private void cargarControles() {

		int posXReferencia = 25;
		int posYReferencia = 25;
		int anchoControl = 30;
		int altoControl = 30;

		boardControls = new JButton[numZeilen][numSpalten];
		for (int i = 0; i < boardControls.length; i++) {
			for (int j = 0; j < boardControls[i].length; j++) {
				boardControls[i][j] = new JButton();
				boardControls[i][j].setName(i + "," + j);
				boardControls[i][j].setBorder(null);
				if (i == 0 && j == 0) {
					boardControls[i][j].setBounds(posXReferencia, posYReferencia, anchoControl, altoControl);

				} else if (i == 0 && j != 0) {
					boardControls[i][j].setBounds(boardControls[i][j - 1].getX() + boardControls[i][j - 1].getWidth(),
							posYReferencia, anchoControl, altoControl);
				} else {
					boardControls[i][j].setBounds(boardControls[i - 1][j].getX(),
							boardControls[i - 1][j].getY() + boardControls[i - 1][j].getHeight(), anchoControl,
							altoControl);
				}
				boardControls[i][j].addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						btnClick(e);
					}

				});
				getContentPane().add(boardControls[i][j]);
			}
		}
		this.setSize(
				boardControls[numZeilen - 1][numSpalten - 1].getX()
						+ boardControls[numZeilen - 1][numSpalten - 1].getWidth() + 30,
				boardControls[numZeilen - 1][numSpalten - 1].getY()
						+ boardControls[numZeilen - 1][numSpalten - 1].getHeight() + 70);
	}

	private void btnClick(ActionEvent e) {
		JButton btn = (JButton) e.getSource();
		String[] coordenada = btn.getName().split(",");
		int posFila = Integer.parseInt(coordenada[0]);
		int posColumna = Integer.parseInt(coordenada[1]);
		// JOptionPane.showMessageDialog(rootPane, posFila+","+posColumna);
		Board.seleccionarCasilla(posFila, posColumna);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		menuNuevoJuego = new javax.swing.JMenuItem();
		menuTamano = new javax.swing.JMenuItem();
		menunumMinen = new javax.swing.JMenuItem();

		jMenuItem1.setText("jMenuItem1");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jMenu1.setText("Juego");

		menuNuevoJuego.setText("Nuevo");
		menuNuevoJuego.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				menuNuevoJuegoActionPerformed(evt);
			}
		});
		jMenu1.add(menuNuevoJuego);

		menuTamano.setText("Tamaño");
		menuTamano.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				menuTamanoActionPerformed(evt);
			}
		});
		jMenu1.add(menuTamano);

		menunumMinen.setText("Numero Minas");
		menunumMinen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				menunumMinenActionPerformed(evt);
			}
		});
		jMenu1.add(menunumMinen);

		jMenuBar1.add(jMenu1);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 518, Short.MAX_VALUE));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 377, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void menuNuevoJuegoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuNuevoJuegoActionPerformed
		newGame();
	}// GEN-LAST:event_menuNuevoJuegoActionPerformed

	private void menuTamanoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuTamanoActionPerformed
		int num = Integer.parseInt(JOptionPane.showInputDialog(""));
		this.numZeilen = num;
		this.numSpalten = num;
		newGame();
	}// GEN-LAST:event_menuTamanoActionPerformed

	private void menunumMinenActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menunumMinenActionPerformed
		int num = Integer.parseInt(JOptionPane.showInputDialog("Digite número de Minas"));
		this.numMinen = num;
		newGame();
	}// GEN-LAST:event_menunumMinenActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FrmSpiel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FrmSpiel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FrmSpiel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FrmSpiel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new FrmSpiel().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem menuNuevoJuego;
	private javax.swing.JMenuItem menunumMinen;
	private javax.swing.JMenuItem menuTamano;
	// End of variables declaration//GEN-END:variables
}
